import androidx.compose.foundation.BorderStroke
import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.offset
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.requiredHeight
import androidx.compose.foundation.layout.requiredWidth
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.ButtonDefaults
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.draw.shadow
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp

@Composable
fun AndroidCompact1(modifier: Modifier = Modifier) {
    Box(
        modifier = modifier
                .requiredWidth(width = 412.dp)
                .requiredHeight(height = 917.dp)
                .background(color = Color.White)
        ) {
        Row(
            horizontalArrangement = Arrangement.spacedBy(10.dp, Alignment.Start),
            verticalAlignment = Alignment.CenterVertically,
            modifier = Modifier
                        .align(alignment = Alignment.TopStart)
                        .offset(x = (-10).dp,
                                    y = (-10).dp)
                        .padding(all = 10.dp)
            ) {
            Image(
                painter = painterResource(id = R.drawable.img_577925ab4b2146a3b2c0bdbd09eb28611),
                contentDescription = "577925ab-4b21-46a3-b2c0-bdbd09eb2861 1",
                modifier = Modifier
                                .requiredWidth(width = 412.dp)
                                .requiredHeight(height = 917.dp))
            }
        Spacer(
            modifier = Modifier
                        .align(alignment = Alignment.TopStart)
                        .offset(x = 228.dp,
                                    y = 677.dp)
                        .requiredWidth(width = 8.dp)
                        .requiredHeight(height = 4.dp))
        Column(
            verticalArrangement = Arrangement.spacedBy(10.dp, Alignment.Top),
            modifier = Modifier
                        .align(alignment = Alignment.TopStart)
                        .offset(x = 37.dp,
                                    y = 649.dp)
                        .requiredWidth(width = 339.dp)
                        .padding(all = 10.dp)
            ) {
            Column(
                verticalArrangement = Arrangement.spacedBy(10.dp, Alignment.Top),
                modifier = Modifier
                                .fillMaxWidth()
                                .padding(all = 10.dp)
                ) {
                Row(
                    horizontalArrangement = Arrangement.spacedBy(19.dp, Alignment.Start),
                    verticalAlignment = Alignment.CenterVertically,
                    modifier = Modifier
                                        .fillMaxWidth()
                    ) {
                    Box(
                        modifier = Modifier
                                                .requiredWidth(width = 140.dp)
                                                .requiredHeight(height = 93.dp)
                        ) {
                        Column(
                            modifier = Modifier
                                                        .requiredWidth(width = 140.dp)
                                                        .requiredHeight(height = 93.dp)
                                                        .padding(vertical = 18.dp)
                            ) {
                            Row(
                                horizontalArrangement = Arrangement.spacedBy(10.dp, Alignment.CenterHorizontally),
                                verticalAlignment = Alignment.CenterVertically,
                                modifier = Modifier
                                                                .requiredWidth(width = 140.dp)
                                                                .padding(all = 10.dp)
                                ) {
                                Text(
                                    text = "Sign up",
                                    color = Color.White.copy(alpha = 0.95f),
                                    textAlign = TextAlign.Center,
                                    style = MaterialTheme.typography.headlineLarge,
                                    modifier = Modifier
                                                                        .border(border = BorderStroke(1.dp, Color.Black))
                                                                        .shadow(elevation = 4.dp))
                                }
                            }
                        Box(
                            modifier = Modifier
                                                        .requiredWidth(width = 140.dp)
                                                        .requiredHeight(height = 93.dp)
                                                        .clip(shape = RoundedCornerShape(16.dp))
                                                        .background(color = Color(0xfffc6238))
                                                        .border(border = BorderStroke(1.dp, Color.Black),
                                                                                    shape = RoundedCornerShape(16.dp))
                                                        .shadow(elevation = 4.dp,
                                                                                    shape = RoundedCornerShape(16.dp)))
                        }
                    Surface(
                        shape = RoundedCornerShape(16.dp),
                        color = Color.White,
                        border = BorderStroke(1.dp, Color.Black),
                        modifier = Modifier
                                                .clip(shape = RoundedCornerShape(16.dp))
                                                .shadow(elevation = 4.dp,
                                                                        shape = RoundedCornerShape(16.dp))
                        ) {
                        Box(
                            modifier = Modifier
                                                        .requiredWidth(width = 140.dp)
                                                        .requiredHeight(height = 93.dp)
                            ) {
                            Surface(
                                shape = RoundedCornerShape(16.dp),
                                color = Color(0xff076e8b).copy(alpha = 0.96f),
                                border = BorderStroke(1.dp, Color(0xff29dbef)),
                                modifier = Modifier
                                                                .clip(shape = RoundedCornerShape(16.dp))
                                                                .shadow(elevation = 4.dp,
                                                                                                shape = RoundedCornerShape(16.dp))
                                ) {
                                Box(
                                    modifier = Modifier
                                                                        .requiredWidth(width = 140.dp)
                                                                        .requiredHeight(height = 93.dp)
                                    ) {
                                    Row(
                                        horizontalArrangement = Arrangement.spacedBy(10.dp, Alignment.CenterHorizontally),
                                        verticalAlignment = Alignment.CenterVertically,
                                        modifier = Modifier
                                                                                .align(alignment = Alignment.TopStart)
                                                                                .offset(x = 0.dp,
                                                                                                                        y = 17.dp)
                                                                                .requiredWidth(width = 140.dp)
                                                                                .padding(all = 10.dp)
                                        ) {
                                        Text(
                                            text = "login",
                                            color = Color.White.copy(alpha = 0.95f),
                                            textAlign = TextAlign.Center,
                                            style = MaterialTheme.typography.headlineLarge,
                                            modifier = Modifier
                                                                                        .border(border = BorderStroke(1.dp, Color.Black))
                                                                                        .shadow(elevation = 4.dp))
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
 }

@Preview(widthDp = 412, heightDp = 917)
@Composable
private fun AndroidCompact1Preview() {
    AndroidCompact1(Modifier)
 }